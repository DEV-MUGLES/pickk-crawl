# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install yarn
        run: npm install -g yarn

      - name: Install project dependencies
        if: |
          steps.yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn

      - name: Lint test
        run: yarn lint

      - name: TS Test
        run: yarn tsc

      - name: Jest Test
        run: |
          mkdir -p coverage
          yarn jest --coverage --max-workers=2 --silent
        env:
          JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - name: Codecov Upload
        if: matrix.node-version == '12.x'
        uses: codecov/codecov-action@v1
        with:
          token: 44593aba-e97d-4807-9789-96900bb789ea # not required for public repos
          file: ./coverage/lcov.info
          # flags: unittests # optional
          # name: codecov-umbrella # optional
          # fail_ci_if_error: true # optional (default = false)

      - name: Artifact Upload
        uses: actions/upload-artifact@v2
        if: matrix.node-version == '12.x'
        with:
          name: my-artifact
          path: coverage
